name: CI Tests

on:
  push:
    branches: [main]
    paths-ignore:
      - "apps/docs/**"
      - ".github/workflows/docs.yml"
  pull_request:
    branches: [main]
    paths-ignore:
      - "apps/docs/**"
      - ".github/workflows/docs.yml"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:17-3.5
        env:
          POSTGRES_DB: postgres # Connect to the default DB to create others
          POSTGRES_USER: timetiles_user
          POSTGRES_PASSWORD: timetiles_password
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      # This is a placeholder, the actual DB is set dynamically in setup.ts
      DATABASE_URL: postgresql://timetiles_user:timetiles_password@localhost:5432/timetiles_test_1
      PAYLOAD_SECRET: test-secret-key
      NODE_ENV: test
      CI: true

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - run: pnpm install

      - name: Create test database pool
        run: |
          # Create multiple isolated databases for parallel test workers
          for i in {1..4}; do
            psql -h localhost -U timetiles_user -d postgres -c "CREATE DATABASE timetiles_test_$i;"
            psql -h localhost -U timetiles_user -d timetiles_test_$i -c "CREATE EXTENSION IF NOT EXISTS postgis;"
            psql -h localhost -U timetiles_user -d timetiles_test_$i -c "CREATE EXTENSION IF NOT EXISTS postgis_topology;"
            psql -h localhost -U timetiles_user -d timetiles_test_$i -c "CREATE SCHEMA IF NOT EXISTS payload;"
          done
        env:
          PGPASSWORD: timetiles_password

      - name: Build project
        run: pnpm build

      - name: Run linting
        run: pnpm lint

      - name: Run type checking
        run: pnpm typecheck
        working-directory: apps/web

      - name: Run main test suite
        run: pnpm test:verbose
        working-directory: apps/web

      - name: Setup E2E test database
        run: |
          # Create main database for E2E tests
          psql -h localhost -U timetiles_user -d postgres -c "CREATE DATABASE timetiles;"
          psql -h localhost -U timetiles_user -d timetiles -c "CREATE EXTENSION IF NOT EXISTS postgis;"
          psql -h localhost -U timetiles_user -d timetiles -c "CREATE EXTENSION IF NOT EXISTS postgis_topology;"
          psql -h localhost -U timetiles_user -d timetiles -c "CREATE SCHEMA IF NOT EXISTS payload;"
        env:
          PGPASSWORD: timetiles_password

      - name: Run migrations for E2E tests
        run: pnpm payload:migrate
        working-directory: apps/web
        env:
          DATABASE_URL: postgresql://timetiles_user:timetiles_password@localhost:5432/timetiles
          PAYLOAD_SECRET: test-secret-key

      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps
        working-directory: apps/web

      - name: Run E2E tests
        run: pnpm test:e2e
        working-directory: apps/web
        env:
          DATABASE_URL: postgresql://timetiles_user:timetiles_password@localhost:5432/timetiles
          PAYLOAD_SECRET: test-secret-key
          NEXT_PUBLIC_PAYLOAD_URL: http://localhost:3000

      - name: Upload E2E test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
