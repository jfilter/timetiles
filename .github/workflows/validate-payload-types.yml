name: Validate Payload Generated Files

on:
  pull_request:
    paths:
      - "apps/web/lib/collections/**"
      - "apps/web/payload.config.ts"
      - "apps/web/payload-generated-schema.ts"
      - ".github/workflows/validate-payload-types.yml"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"
  push:
    branches: [main, develop]
    paths:
      - "apps/web/lib/collections/**"
      - "apps/web/payload.config.ts"
      - "apps/web/payload-generated-schema.ts"
      - ".github/workflows/validate-payload-types.yml"
      - "package.json"
      - "pnpm-lock.yaml"
      - "pnpm-workspace.yaml"

jobs:
  validate-types:
    name: Validate Payload generated files are in sync
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:17-3.5
        env:
          POSTGRES_USER: timetiles_user
          POSTGRES_PASSWORD: timetiles_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgresql://timetiles_user:timetiles_password@localhost:5432/timetiles
      PAYLOAD_SECRET: test-secret-key
      PGPASSWORD: timetiles_password
      NEXT_PUBLIC_PAYLOAD_URL: http://localhost:3000

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Setup database
        run: |
          psql -h localhost -U timetiles_user -d postgres -c "CREATE DATABASE timetiles;"
          psql -h localhost -U timetiles_user -d timetiles -c "CREATE EXTENSION IF NOT EXISTS postgis; CREATE EXTENSION IF NOT EXISTS postgis_topology; CREATE SCHEMA IF NOT EXISTS payload;"

      - name: Run database migrations
        run: pnpm payload:migrate
        working-directory: apps/web

      - name: Validate Payload generated files
        run: pnpm payload:validate
        working-directory: apps/web

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "❌ Payload generated files are out of sync!"
            echo "Please run 'pnpm payload:generate' and commit the changes."
            git status
            exit 1
          else
            echo "✅ Payload generated files are in sync!"
          fi
